{"version":3,"sources":["../src/install.js"],"names":["PackageJSON","require","path","join","process","cwd","prompt","inquirer","createPromptModule","registerPrompt","Install","self","packageJSONTemplate","settings","devmode","installDevMode","installedDevMode","frontend","installFrontendFramework","installedFrontend","installInterval","setInterval","installedWebpack","clearInterval","console","log","chalk","green","i18n","__","fs","writeFile","JSON","stringify","err","type","name","message","then","result","install","child","cliDevMode","shell","env","stdio","stdin","stdout","stderr","on","exitCode","exit","usageText","addPackageDependencies","devMode","e","red","webpack","webpackLoaders","WebpackConfigTemplate","writeFileSync","scripts","callback","totalScripts","loadedScripts","npm","load","forEach","parScript","test","replace","split","dependency","commands","show","rawData","devDependencies","Object","keys","dependencies","pCallback","argv","h","Help","_","length"],"mappings":"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","file":"install.js","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nimport npm from \"npm\";\n\nimport 'babel-polyfill';\nimport minimist from \"minimist\";\nimport chalk from \"chalk\";\nimport inquirer from \"inquirer\";\nimport i18n from \"i18n\";\nimport _ from \"lodash\";\nimport gitClone from \"git-clone\";\nimport rimraf from \"rimraf\";\nimport { exec, spawn } from \"child_process\";\n\nimport { installPlugins } from \"./plugins\";\n\nconst PackageJSON = require(path.join(process.cwd(), \"package\"));\n\nlet prompt = inquirer.createPromptModule();\ninquirer.registerPrompt('fuzzypath', require('inquirer-fuzzy-path'));\n\nexport class Install{\n    async bootstrap(self, packageJSONTemplate){\n        this.packageJSONTemplate = packageJSONTemplate;\n\n        if(self.settings.devmode)\n            await this.installDevMode(self);\n        else\n            this.installedDevMode = true;\n\n        /*if(self.settings.webpack)\n            await this.installWebpack(self);\n        else\n            this.installedWebpack = true;*/\n\n        if(self.settings.frontend != \"none\")\n            await this.installFrontendFramework(self);\n        else\n            this.installedFrontend = true;\n\n        //if(self.settings.skeleton)\n        //    installPlugins(self, packageJSONTemplate);\n\n        var installInterval = setInterval(() => {\n            if(this.installedDevMode && this.installedWebpack && this.installedFrontend){\n                clearInterval(installInterval);\n                console.log(chalk.green(i18n.__(\"Create package.json ...\")));\n\n                fs.writeFile(path.join(self.settings.path, \"package.json\"), JSON.stringify(this.packageJSONTemplate, null, 4), async (err) => {\n                    console.log(chalk.green(i18n.__(\"Install dependencies ...\")));\n\n                    prompt([{\n                        type: 'confirm',\n                        name: 'install',\n                        message: i18n.__(\"Would you like to install dependencies via NPM?\"),\n                    }]).then(result => {\n                        if(result.install){\n                            var child = spawn(\"npm install && \" + PackageJSON[\"@dek/scripts\"].cliDevMode, {\n                                shell: true,\n                                env: process.env,\n                                cwd: self.settings.path,\n                                stdio: [process.stdin, process.stdout, process.stderr]\n                            });\n\n                            child.on('exit', function (exitCode) {\n                                process.exit(1);\n                            });\n                        }\n                        else{\n                            const usageText = `\n    Project created successfully!\n\n    To start the project in development mode:\n    $ cd ${self.settings.path}\n    $ sudo npm i -g nodemon cross-env babel-cli webpack-cli\n    $ npm install --save-dev\n    $ npm run dev`;\n\n                          console.log(usageText);\n                        }\n                    });\n                });\n            }\n        }, 1000);\n    }\n\n    installFrontendFramework(self){\n        this.installedFrontend = false;\n        console.log(chalk.green(i18n.__(\"Install frontend framework ...\")));\n\n        var child = spawn(PackageJSON[\"@dek/frontend\"][self.settings.frontend], {\n            shell: true,\n            env: process.env,\n            cwd: self.settings.path,\n            stdio: [process.stdin, process.stdout, process.stderr]\n        });\n\n        child.on('exit', function (exitCode) {\n            this.installedFrontend = true;\n        });\n    }\n\n    installDevMode(self){\n        this.installedDevMode = false;\n        console.log(chalk.green(i18n.__(\"Install dev mode ...\")));\n\n        try{\n            this.addPackageDependencies(PackageJSON[\"@dek/scripts\"].devMode, { cwd: self.settings.path }, () => {\n                this.installedDevMode = true;\n            });\n        } catch(e){\n            console.log(chalk.red(e.message));\n        }\n    }\n\n    installWebpack(self){\n        this.installedWebpack = false;\n        console.log(chalk.green(i18n.__(\"Install Webpack ...\")));\n\n        return this.addPackageDependencies([PackageJSON[\"@dek/scripts\"].webpack, PackageJSON[\"@dek/scripts\"].webpackLoaders], { cwd: self.settings.path }, () => {\n            var WebpackConfigTemplate = require(path.join(process.cwd(), \"templates\", \"webpack.config.js\"))(self);\n            fs.writeFileSync(path.join(self.settings.path, \"webpack.config.js\"), WebpackConfigTemplate);\n\n            this.installedWebpack = true;\n            return true;\n        });\n    }\n\n    async addPackageDependencies(scripts, settings, callback){\n        var totalScripts = 0, loadedScripts = 0;\n\n        if(typeof scripts == \"string\")\n            scripts = [scripts];\n\n        await npm.load({}, (err) => {\n            scripts.forEach((parScript) => {\n                if(/--save-dev/.test(parScript)){\n                    parScript = parScript.replace(\"--save-dev\", \"\");\n\n                    parScript.split(\" \").forEach((dependency) => {\n                        if(dependency && dependency != \"\"){\n                            totalScripts++;\n\n                            npm.commands.show([dependency, 'name'], (err, rawData) => {\n                                loadedScripts++;\n                                this.packageJSONTemplate.devDependencies[dependency] = \"^\" + Object.keys(rawData)[0];\n                            });\n                        }\n                    });\n                }\n                else {\n                    parScript = parScript.replace(\"--save\", \"\");\n\n                    parScript.split(\" \").forEach((dependency) => {\n                        if(dependency && dependency != \"\"){\n                            totalScripts++;\n\n                            npm.commands.show([dependency, 'name'], (err, rawData) => {\n                                loadedScripts++;\n                                this.packageJSONTemplate.dependencies[dependency] = \"^\" + Object.keys(rawData)[0];\n                            });\n                        }\n                    });\n                }\n            });\n\n            if(typeof callback == \"function\"){\n                var pCallback = setInterval(() => {\n                    if(loadedScripts === totalScripts){\n                        callback();\n                        clearInterval(pCallback);\n                    }\n                }, 1000);\n            }\n        });\n    }\n\n    Help(){\n        const usageText = `\n  Usage:\n    dek install (with no args, in package dir)\n    dek install <plugin>\n    dek install <git:// url>\n  `\n\n        console.log(usageText)\n    }\n}\n\nexport default async (argv) => {\n    let install = new Install();\n\n    if(argv.h){\n        install.Help();\n    }\n    else if(argv._.length > 1){\n        //Install Plugins\n    }\n    else{\n\n    }\n}\n"]}