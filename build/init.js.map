{"version":3,"sources":["../src/init.js"],"names":["PackageJSON","require","path","join","process","cwd","prompt","inquirer","createPromptModule","registerPrompt","i18n","configure","locales","defaultLocale","directory","Init","type","name","choices","message","validate","value","setLocale","default","__","length","then","itemType","rootPath","projectSettings","suggestOnly","Object","keys","_","merge","projectSettings2","settings","createProject","self","Promise","resolve","reject","directoryExists","console","log","chalk","green","fs","mkdir","recursive","err","cloneSkeleton","catch","red","repository","url","replace","unlinkGitAndPackage","unlinkSync","e","createGitAndPackage","projectPackageJSON","version","description","main","scripts","devDependencies","dependencies","homepage","bugs","writeFileSync","JSON","stringify","installDevMode","devMode","filePath","statSync","isDirectory","yellow","argv","init","h","Help","Prompt"],"mappings":"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","file":"init.js","sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\n\nimport 'babel-polyfill';\nimport minimist from \"minimist\";\nimport chalk from \"chalk\";\nimport inquirer from \"inquirer\";\nimport i18n from \"i18n\";\nimport _ from \"lodash\";\nimport gitClone from \"git-clone\";\nimport rimraf from \"rimraf\";\nimport { exec } from \"child_process\";\n\nimport { installPlugins } from \"./plugins\";\nimport Install from \"./install\";\n\nconst PackageJSON = require(path.join(process.cwd(), \"package\"));\n\nlet prompt = inquirer.createPromptModule();\ninquirer.registerPrompt('fuzzypath', require('inquirer-fuzzy-path'));\n\ni18n.configure({\n    locales: ['en', 'ptBR'],\n    defaultLocale: 'en',\n    directory: path.join(process.cwd(), \"locales\")\n});\n\nexport class Init{\n    Prompt(){\n        prompt([\n            {\n                type: \"list\",\n                name: \"lang\",\n                choices: [\"en\", \"ptBR\"],\n                message: \"What is your language?\",\n                validate: (value) => {\n                    i18n.setLocale(value);\n                    true;\n                }\n            },\n            {\n                type: \"input\",\n                name: \"name\",\n                default: i18n.__(\"myproject\"),\n                message: i18n.__(\"What is the name of the project?\"),\n                validate: (value) => {\n                    if (value.length)\n                        return true;\n                    else\n                        return i18n.__(\"Please set a valid value\");\n                }\n            },\n            {\n                type: \"input\",\n                name: \"version\",\n                default: \"1.0.0\",\n                message: i18n.__(\"What is the version of the project?\"),\n                validate: (value) => {\n                    if (value.length)\n                        return true;\n                    else\n                        return i18n.__(\"Please set a valid value\");\n                }\n            },\n        ]).then(projectSettings => {\n            prompt([{\n                type: 'input',\n                name: 'path',\n                itemType: 'directory',\n                rootPath: process.cwd(),\n                message: i18n.__(\"Directory for your project:\",),\n                default: process.cwd() + \"/\" + projectSettings.name,\n                suggestOnly: true\n            }, {\n                type: 'input',\n                name: 'repository',\n                message: i18n.__(\"What is the repository of this project?\"),\n            }, {\n                type: 'checkbox',\n                name: 'plugins',\n                message: i18n.__(\"Select plugins for your project:\"),\n                choices: Object.keys(PackageJSON[\"@dek/plugins\"])\n            }]).then(projectSettings2 => {\n                projectSettings = _.merge(projectSettings, projectSettings2);\n                this.settings = projectSettings;\n                this.createProject();\n            });;\n        });\n    }\n\n    createProject(){\n        var self = this;\n\n        new Promise((resolve, reject) => {\n            if(!this.directoryExists(self.settings.path)){\n                console.log(chalk.green(i18n.__(\"Creating directory \") + self.settings.path));\n\n                fs.mkdir(self.settings.path, { recursive: true }, (err) => {\n                    if(err) reject(err);\n                    else resolve(self);\n                });\n            }\n            else{\n                reject(i18n.__(\"It was not possible to create the project because the directory already exists\"));\n            }\n        }).then(self.cloneSkeleton).catch(err => {\n            console.log(chalk.red(err));\n        });\n    }\n\n    cloneSkeleton(self){\n\n        new Promise((resolve, reject) => {\n            console.log(chalk.green(i18n.__(\"Clone boorstrap \") + PackageJSON.repository.url.replace(\"CLI\", \"boostrap\")));\n\n            gitClone(PackageJSON.repository.url.replace(\"CLI\", \"boostrap\"), self.settings.path, err => {\n                if(err) reject(chalk.red(err));\n                else resolve(self);\n            });\n        }).then(self.unlinkGitAndPackage).catch(err => {\n            console.log(chalk.red(err));\n        });\n    }\n\n    unlinkGitAndPackage(self){\n        new Promise((resolve, reject) => {\n\n            try{\n                console.log(chalk.green(i18n.__(\"Unlink package.json\")));\n                fs.unlinkSync(path.join(self.settings.path, \"package.json\"));\n            } catch(e) { console.log(chalk.red(e.message)); }\n\n            console.log(chalk.green(i18n.__(\"Unlink \" + path.join(self.settings.path, \".git\"))));\n\n            rimraf(path.join(self.settings.path, \".git\"), () => {\n                resolve(self);\n            });\n        }).then(self.createGitAndPackage).catch(err => {\n            console.log(chalk.red(err));\n        });\n    }\n\n    createGitAndPackage(self){\n        console.log(chalk.green(i18n.__(\"Creating package.json ...\")));\n\n        let projectPackageJSON = {\n            name: self.settings.name,\n            version: self.settings.version,\n            description: \"\",\n            main: \"src/index.js\",\n            scripts: {\n                \"test\": \"npm run build && mocha\",\n                \"dev\": \"nodemon -w src --exec \\\"babel-node src --presets env\\\"\",\n                \"build\": \"babel src -s -D -d build --presets env\",\n                \"start\": \"npm run build && node build\"\n            },\n            devDependencies: {},\n            dependencies: {}\n        }\n\n        if(self.settings.repository){\n            projectPackageJSON.homepage = self.settings.repository;\n\n            projectPackageJSON.repository = {\n                \"type\": \"git\",\n                \"url\": self.settings.repository\n            };\n\n            projectPackageJSON.bugs = {\n                \"url\": self.settings.repository + \"/issues\"\n            }\n        }\n\n        fs.writeFileSync(path.join(self.settings.path, \"package.json\"), JSON.stringify(projectPackageJSON, null, 4));\n\n        console.log(chalk.green(i18n.__(\"Creating .git ...\")));\n\n        if(self.settings.repository){\n            exec(\"git init\", { cwd: self.settings.path }, (err) => {\n                if(err) console.log(chalk.red(err));\n                else{\n                    exec(\"git remote add origin \" + self.settings.repository, { cwd: self.settings.path }, (err) => {\n                        if(err) console.log(chalk.red(err));\n                        else{\n                            self.installDevMode(self);\n                        }\n                    });\n                }\n            });\n        }\n    }\n\n    installDevMode(self){\n        console.log(chalk.green(i18n.__(\"Install dev mode ...\")));\n\n        exec(PackageJSON[\"@dek/scripts\"].devMode, { cwd: self.settings.path }, (err) => {\n            if(err) console.log(chalk.red(err));\n            else installPlugins(self.settings);\n        });\n    }\n\n    directoryExists(filePath){\n        try {\n            return fs.statSync(filePath).isDirectory();\n        }\n        catch (err) {\n            return false;\n        }\n    }\n\n    Help(){\n        console.log(chalk.yellow(\"Very simple 'dek init' only\"));\n    }\n}\n\nexport default async (argv) => {\n    let init = new Init();\n\n    if(argv.h)\n        init.Help();\n    else\n        init.Prompt();\n}\n"]}