"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.Init=void 0;var _createClass=function(){function a(a,b){for(var c,d=0;d<b.length;d++)c=b[d],c.enumerable=c.enumerable||!1,c.configurable=!0,"value"in c&&(c.writable=!0),Object.defineProperty(a,c.key,c)}return function(b,c,d){return c&&a(b.prototype,c),d&&a(b,d),b}}(),_fs=require("fs"),_fs2=_interopRequireDefault(_fs),_path=require("path"),_path2=_interopRequireDefault(_path);require("babel-polyfill");var _minimist=require("minimist"),_minimist2=_interopRequireDefault(_minimist),_chalk=require("chalk"),_chalk2=_interopRequireDefault(_chalk),_inquirer=require("inquirer"),_inquirer2=_interopRequireDefault(_inquirer),_i18n=require("i18n"),_i18n2=_interopRequireDefault(_i18n),_lodash=require("lodash"),_lodash2=_interopRequireDefault(_lodash),_gitClone=require("git-clone"),_gitClone2=_interopRequireDefault(_gitClone),_rimraf=require("rimraf"),_rimraf2=_interopRequireDefault(_rimraf),_child_process=require("child_process"),_plugins=require("./plugins"),_install=require("./install"),_install2=_interopRequireDefault(_install);function _interopRequireDefault(a){return a&&a.__esModule?a:{default:a}}function _asyncToGenerator(a){return function(){var b=a.apply(this,arguments);return new Promise(function(a,c){function d(e,f){try{var g=b[e](f),h=g.value}catch(a){return void c(a)}return g.done?void a(h):Promise.resolve(h).then(function(a){d("next",a)},function(a){d("throw",a)})}return d("next")})}}function _classCallCheck(a,b){if(!(a instanceof b))throw new TypeError("Cannot call a class as a function")}var PackageJSON=require(_path2.default.join(process.cwd(),"package")),prompt=_inquirer2.default.createPromptModule();_inquirer2.default.registerPrompt("fuzzypath",require("inquirer-fuzzy-path")),_i18n2.default.configure({locales:["en","ptBR"],defaultLocale:"en",directory:_path2.default.join(process.cwd(),"locales")});var Init=exports.Init=function(){function a(){_classCallCheck(this,a)}return _createClass(a,[{key:"Prompt",value:function b(){var a=this;prompt([{type:"list",name:"lang",choices:["en","ptBR"],message:"What is your language?",validate:function b(a){_i18n2.default.setLocale(a),!0}},{type:"input",name:"name",default:_i18n2.default.__("myproject"),message:_i18n2.default.__("What is the name of the project?"),validate:function b(a){return!!a.length||_i18n2.default.__("Please set a valid value")}},{type:"input",name:"version",default:"1.0.0",message:_i18n2.default.__("What is the version of the project?"),validate:function b(a){return!!a.length||_i18n2.default.__("Please set a valid value")}}]).then(function(b){prompt([{type:"input",name:"path",itemType:"directory",rootPath:process.cwd(),message:_i18n2.default.__("Directory for your project:"),default:process.cwd()+"/"+b.name,suggestOnly:!0},{type:"input",name:"repository",message:_i18n2.default.__("What is the repository of this project?")},{type:"checkbox",name:"plugins",message:_i18n2.default.__("Select plugins for your project:"),choices:Object.keys(PackageJSON["@dek/plugins"])}]).then(function(c){b=_lodash2.default.merge(b,c),a.settings=b,a.createProject()})})}},{key:"createProject",value:function c(){var a=this,b=this;new Promise(function(c,d){a.directoryExists(b.settings.path)?d(_i18n2.default.__("It was not possible to create the project because the directory already exists")):(console.log(_chalk2.default.green(_i18n2.default.__("Creating directory ")+b.settings.path)),_fs2.default.mkdir(b.settings.path,{recursive:!0},function(a){a?d(a):c(b)}))}).then(b.cloneSkeleton).catch(function(a){console.log(_chalk2.default.red(a))})}},{key:"cloneSkeleton",value:function b(a){new Promise(function(b,c){console.log(_chalk2.default.green(_i18n2.default.__("Clone boorstrap ")+PackageJSON.repository.url.replace("CLI","boostrap"))),(0,_gitClone2.default)(PackageJSON.repository.url.replace("CLI","boostrap"),a.settings.path,function(d){d?c(_chalk2.default.red(d)):b(a)})}).then(a.unlinkGitAndPackage).catch(function(a){console.log(_chalk2.default.red(a))})}},{key:"unlinkGitAndPackage",value:function b(a){new Promise(function(b){try{console.log(_chalk2.default.green(_i18n2.default.__("Unlink package.json"))),_fs2.default.unlinkSync(_path2.default.join(a.settings.path,"package.json"))}catch(a){console.log(_chalk2.default.red(a.message))}console.log(_chalk2.default.green(_i18n2.default.__("Unlink "+_path2.default.join(a.settings.path,".git")))),(0,_rimraf2.default)(_path2.default.join(a.settings.path,".git"),function(){b(a)})}).then(a.createGitAndPackage).catch(function(a){console.log(_chalk2.default.red(a))})}},{key:"createGitAndPackage",value:function c(a){console.log(_chalk2.default.green(_i18n2.default.__("Creating package.json ...")));var b={name:a.settings.name,version:a.settings.version,description:"",main:"src/index.js",scripts:{test:"npm run build && mocha",dev:"nodemon -w src --exec \"babel-node src --presets env\"",build:"babel src -s -D -d build --presets env",start:"npm run build && node build"},devDependencies:{},dependencies:{}};a.settings.repository&&(b.homepage=a.settings.repository,b.repository={type:"git",url:a.settings.repository},b.bugs={url:a.settings.repository+"/issues"}),_fs2.default.writeFileSync(_path2.default.join(a.settings.path,"package.json"),JSON.stringify(b,null,4)),console.log(_chalk2.default.green(_i18n2.default.__("Creating .git ..."))),a.settings.repository&&(0,_child_process.exec)("git init",{cwd:a.settings.path},function(b){b?console.log(_chalk2.default.red(b)):(0,_child_process.exec)("git remote add origin "+a.settings.repository,{cwd:a.settings.path},function(b){b?console.log(_chalk2.default.red(b)):a.installDevMode(a)})})}},{key:"installDevMode",value:function b(a){console.log(_chalk2.default.green(_i18n2.default.__("Install dev mode ..."))),(0,_child_process.exec)(PackageJSON["@dek/scripts"].devMode,{cwd:a.settings.path},function(b){b?console.log(_chalk2.default.red(b)):(0,_plugins.installPlugins)(a.settings)})}},{key:"directoryExists",value:function b(a){try{return _fs2.default.statSync(a).isDirectory()}catch(a){return!1}}},{key:"Help",value:function a(){console.log(_chalk2.default.yellow("Very simple 'dek init' only"))}}]),a}();exports.default=function(){var a=_asyncToGenerator(/*#__PURE__*/regeneratorRuntime.mark(function a(b){var c;return regeneratorRuntime.wrap(function(a){for(;;)switch(a.prev=a.next){case 0:c=new Init,b.h?c.Help():c.Prompt();case 2:case"end":return a.stop();}},a,void 0)}));return function(){return a.apply(this,arguments)}}();
//# sourceMappingURL=init.js.map